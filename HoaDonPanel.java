/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.quanlydatban.GUI;


import com.mycompany.quanlydatban.dao.ChiTietHoaDonDAO;
import static com.mycompany.quanlydatban.dao.ChiTietHoaDonDAO.getDanhSachChiTietHoaDon;
import com.mycompany.quanlydatban.dao.HoaDonDAO;
import com.mycompany.quanlydatban.entity.ChiTietHoaDon;
import com.mycompany.quanlydatban.entity.EnumTrangThaiDatBan;
import com.mycompany.quanlydatban.entity.HoaDonThanhToan;
import com.mycompany.quanlydatban.entity.KhachHang;
import com.mycompany.quanlydatban.entity.MonAn;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author gunny
 */
public class HoaDonPanel extends javax.swing.JPanel {
    private HoaDonDAO hoadon_dao;
    private ChiTietHoaDonDAO chitiet_dao;
    private HoaDonThanhToan hoaDon;

    /**
     * Creates new form HoaDonPanel
     */
    public HoaDonPanel() {
        
        initComponents();
        Color color_bg = Color.decode("#00405d");
        setLayout(new BorderLayout());
        add(jp_TT,BorderLayout.NORTH);
        add(jp_Table,BorderLayout.CENTER);
        add(jPanel_Button,BorderLayout.SOUTH);
        jButtonTimKiem.setBackground(color_bg);
        btn_In.setBackground(color_bg);
        btn_ThanhToan.setBackground(color_bg);
        PlaceholderSupport placeholderSupport = new PlaceholderSupport();
        placeholderSupport.addPlaceholder(jTextFieldTimKiemTheoMaBan,"Nhập mã bàn");
        placeholderSupport.addPlaceholder(jT_TimKiemTheoMaHD,"Nhập mã hóa đơn");
        placeholderSupport.addPlaceholder(jT_TimTheoSoDienThoai,"Nhập số điện thoại");
        // 1. Thiết lập không cho phép chỉnh sửa ô
        JTable_DS.setDefaultEditor(Object.class, null);
        jTable_ChiTiet.setDefaultEditor(Object.class, null);
        // 2. Cho phép chọn dòng
        JTable_DS.setRowSelectionAllowed(true);
        JTable_DS.setColumnSelectionAllowed(false);
//        JTable_DS.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTable_ChiTiet.setRowSelectionAllowed(true);
        jTable_ChiTiet.setColumnSelectionAllowed(false);
//        JTable_ChiTiet.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		// Sử dụng DefaultTableModel từ JTable hiện tại
        DefaultTableModel tableModel = (DefaultTableModel) JTable_DS.getModel();

        // Xóa dữ liệu cũ trên bảng (nếu có)
        tableModel.setRowCount(0);  

        // Lấy danh sách hóa đơn và thêm dữ liệu vào mô hình bảng
        hoadon_dao = new HoaDonDAO();
        List<HoaDonThanhToan> dshd = hoadon_dao.getDanhSachHoaDon();
        System.out.println(dshd);
               
        if (dshd != null && !dshd.isEmpty()) {
            //dshd.forEach(System.out::println);  // Kiểm tra dữ liệu có trong danh sách

            for (HoaDonThanhToan hd : dshd) {
                Object[] rowData = {
                    hd.getMaHoaDon(),
                    hd.getNgayDatBan(),
                    hd.getBanAn().getMaBan(),
                    hd.getTongTien(),
                    hd.getTrangThai()
                };
                tableModel.addRow(rowData);
            }
        } else {
            System.out.println("Danh sách hóa đơn rỗng hoặc không lấy được dữ liệu!");
        }
        JTable_DS.setDefaultEditor(Object.class, null);
        JTable_DS.setRowSelectionAllowed(true);
        JTable_DS.setColumnSelectionAllowed(false);     
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jp_TT = new javax.swing.JPanel();
        jLabelTimHoaDon = new javax.swing.JLabel();
        jTextFieldTimKiemTheoMaBan = new javax.swing.JTextField();
        jButtonTimKiem = new javax.swing.JButton();
        jL_TrangThai = new javax.swing.JLabel();
        jComboBox_TrangThai = new javax.swing.JComboBox<>();
        jL_TimTheoSoDienThoai = new javax.swing.JLabel();
        jL_TimTheoMa = new javax.swing.JLabel();
        jT_TimTheoSoDienThoai = new javax.swing.JTextField();
        jT_TimKiemTheoMaHD = new javax.swing.JTextField();
        jL_MaBan = new javax.swing.JLabel();
        jPanelKH = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jText_MaKH = new javax.swing.JTextField();
        jText_TenKH = new javax.swing.JTextField();
        jText_SoDienThoai = new javax.swing.JTextField();
        jText_Mail = new javax.swing.JTextField();
        jp_Table = new javax.swing.JPanel();
        jPanel_Infor = new javax.swing.JPanel();
        jL_Tong = new javax.swing.JLabel();
        jL_Giam = new javax.swing.JLabel();
        jL_Thue = new javax.swing.JLabel();
        jL_ThanhToan = new javax.swing.JLabel();
        jT_Tong = new javax.swing.JTextField();
        jT_Giam = new javax.swing.JTextField();
        jT_Thue = new javax.swing.JTextField();
        jScrollPaneChiTietHoaDon = new javax.swing.JScrollPane();
        jTable_ChiTiet = new javax.swing.JTable();
        jT_ThanhToan = new javax.swing.JTextField();
        jPanel_DS = new javax.swing.JPanel();
        Jscroll_table = new javax.swing.JScrollPane();
        JTable_DS = new javax.swing.JTable();
        jPanel_Button = new javax.swing.JPanel();
        btn_In = new javax.swing.JButton();
        btn_ThanhToan = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quản Lý Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        jp_TT.setBackground(new java.awt.Color(255, 255, 255));
        jp_TT.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0))));

        jLabelTimHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabelTimHoaDon.setText("Tìm Hóa Đơn:");

        jTextFieldTimKiemTheoMaBan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTextFieldTimKiemTheoMaBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTimKiemTheoMaBanActionPerformed(evt);
            }
        });

        jButtonTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jButtonTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        jButtonTimKiem.setText("Tìm Kiếm");
        jButtonTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonTimKiemMouseClicked(evt);
            }
        });
        jButtonTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTimKiemActionPerformed(evt);
            }
        });

        jL_TrangThai.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jL_TrangThai.setText("Trạng Thái:");

        jComboBox_TrangThai.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jComboBox_TrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Đã Thanh Toán", "Chưa Thanh Toán" }));
        jComboBox_TrangThai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_TrangThaiActionPerformed(evt);
            }
        });

        jL_TimTheoSoDienThoai.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jL_TimTheoSoDienThoai.setText("Theo Số Điện Thoại:");

        jL_TimTheoMa.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jL_TimTheoMa.setText("Theo Mã Hóa Đơn:");

        jT_TimTheoSoDienThoai.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        jT_TimKiemTheoMaHD.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jT_TimKiemTheoMaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jT_TimKiemTheoMaHDActionPerformed(evt);
            }
        });

        jL_MaBan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jL_MaBan.setText("Theo Mã Bàn:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setText("Mã Khách Hàng:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Tên Khách Hàng:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Số Điện Thoại:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Email:");

        jText_MaKH.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jText_MaKH.setEnabled(false);

        jText_TenKH.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jText_TenKH.setEnabled(false);

        jText_SoDienThoai.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jText_SoDienThoai.setEnabled(false);
        jText_SoDienThoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jText_SoDienThoaiActionPerformed(evt);
            }
        });

        jText_Mail.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jText_Mail.setEnabled(false);

        javax.swing.GroupLayout jPanelKHLayout = new javax.swing.GroupLayout(jPanelKH);
        jPanelKH.setLayout(jPanelKHLayout);
        jPanelKHLayout.setHorizontalGroup(
            jPanelKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelKHLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(31, 31, 31)
                .addGroup(jPanelKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jText_SoDienThoai, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                    .addComponent(jText_TenKH, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jText_MaKH, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jText_Mail))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelKHLayout.setVerticalGroup(
            jPanelKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelKHLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText_MaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jText_TenKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jText_SoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanelKHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jText_Mail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(535, 535, 535))
        );

        javax.swing.GroupLayout jp_TTLayout = new javax.swing.GroupLayout(jp_TT);
        jp_TT.setLayout(jp_TTLayout);
        jp_TTLayout.setHorizontalGroup(
            jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_TTLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTimHoaDon)
                    .addGroup(jp_TTLayout.createSequentialGroup()
                        .addGroup(jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jp_TTLayout.createSequentialGroup()
                                .addGroup(jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jL_TimTheoMa)
                                    .addComponent(jL_TimTheoSoDienThoai)
                                    .addComponent(jL_MaBan))
                                .addGap(18, 18, 18)
                                .addGroup(jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jT_TimTheoSoDienThoai, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                                    .addComponent(jComboBox_TrangThai, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldTimKiemTheoMaBan, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jT_TimKiemTheoMaHD)))
                            .addComponent(jL_TrangThai))
                        .addGap(29, 29, 29)
                        .addComponent(jButtonTimKiem)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(436, 436, 436))
        );
        jp_TTLayout.setVerticalGroup(
            jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_TTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTimHoaDon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTimKiemTheoMaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_MaBan)
                    .addComponent(jButtonTimKiem))
                .addGap(18, 18, 18)
                .addGroup(jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_TimTheoSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_TimTheoSoDienThoai))
                .addGap(18, 18, 18)
                .addGroup(jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jT_TimKiemTheoMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jL_TimTheoMa))
                .addGap(18, 18, 18)
                .addGroup(jp_TTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jL_TrangThai, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox_TrangThai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
            .addComponent(jPanelKH, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jp_Table.setBackground(new java.awt.Color(255, 255, 255));
        jp_Table.setPreferredSize(new java.awt.Dimension(400, 70));

        jPanel_Infor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi Tiết Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel_Infor.setPreferredSize(new java.awt.Dimension(375, 200));

        jL_Tong.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jL_Tong.setText("Tổng Tiền:");

        jL_Giam.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jL_Giam.setText("Giảm Giá:");

        jL_Thue.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jL_Thue.setText("Thuế:");

        jL_ThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jL_ThanhToan.setText("Số Tiền Cần Thanh Toán:");

        jT_Tong.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jT_Tong.setEnabled(false);
        jT_Tong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jT_TongActionPerformed(evt);
            }
        });

        jT_Giam.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jT_Giam.setEnabled(false);
        jT_Giam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jT_GiamActionPerformed(evt);
            }
        });

        jT_Thue.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jT_Thue.setEnabled(false);

        jTable_ChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Số Thứ Tự", "Tên Món Ăn", "Đơn Giá", "Số Lượng", "Thành Tiền"
            }
        ));
        jScrollPaneChiTietHoaDon.setViewportView(jTable_ChiTiet);

        jT_ThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jT_ThanhToan.setEnabled(false);

        javax.swing.GroupLayout jPanel_InforLayout = new javax.swing.GroupLayout(jPanel_Infor);
        jPanel_Infor.setLayout(jPanel_InforLayout);
        jPanel_InforLayout.setHorizontalGroup(
            jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_InforLayout.createSequentialGroup()
                .addGroup(jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jL_Tong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jL_Thue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jL_Giam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jT_Giam, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jT_Thue, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jT_Tong, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(449, 449, 449))
            .addGroup(jPanel_InforLayout.createSequentialGroup()
                .addGroup(jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_InforLayout.createSequentialGroup()
                        .addComponent(jL_ThanhToan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jT_ThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPaneChiTietHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_InforLayout.setVerticalGroup(
            jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_InforLayout.createSequentialGroup()
                .addComponent(jScrollPaneChiTietHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_Tong)
                    .addComponent(jT_Tong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_Giam)
                    .addComponent(jT_Giam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_Thue)
                    .addComponent(jT_Thue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel_InforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jL_ThanhToan)
                    .addComponent(jT_ThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel_DS.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh Sách Hóa Đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel_DS.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        Jscroll_table.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        JTable_DS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Ngày", "Mã bàn", "Thành tiền", "Tình trạng"
            }
        ));
        JTable_DS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTable_DSMouseClicked(evt);
            }
        });
        Jscroll_table.setViewportView(JTable_DS);

        javax.swing.GroupLayout jPanel_DSLayout = new javax.swing.GroupLayout(jPanel_DS);
        jPanel_DS.setLayout(jPanel_DSLayout);
        jPanel_DSLayout.setHorizontalGroup(
            jPanel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Jscroll_table, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
        );
        jPanel_DSLayout.setVerticalGroup(
            jPanel_DSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Jscroll_table, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jp_TableLayout = new javax.swing.GroupLayout(jp_Table);
        jp_Table.setLayout(jp_TableLayout);
        jp_TableLayout.setHorizontalGroup(
            jp_TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jp_TableLayout.createSequentialGroup()
                .addComponent(jPanel_DS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_Infor, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jp_TableLayout.setVerticalGroup(
            jp_TableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel_DS, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel_Infor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
        );

        jPanel_Button.setBackground(new java.awt.Color(255, 255, 255));
        jPanel_Button.setPreferredSize(new java.awt.Dimension(586, 50));

        btn_In.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_In.setForeground(new java.awt.Color(255, 255, 255));
        btn_In.setText("In Hóa Đơn");
        btn_In.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_InActionPerformed(evt);
            }
        });

        btn_ThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_ThanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btn_ThanhToan.setText("Thanh Toán");
        btn_ThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_ButtonLayout = new javax.swing.GroupLayout(jPanel_Button);
        jPanel_Button.setLayout(jPanel_ButtonLayout);
        jPanel_ButtonLayout.setHorizontalGroup(
            jPanel_ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_ButtonLayout.createSequentialGroup()
                .addGap(306, 306, 306)
                .addComponent(btn_ThanhToan)
                .addGap(18, 18, 18)
                .addComponent(btn_In)
                .addContainerGap(443, Short.MAX_VALUE))
        );
        jPanel_ButtonLayout.setVerticalGroup(
            jPanel_ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_ButtonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_ButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ThanhToan)
                    .addComponent(btn_In))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jp_TT, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jp_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 886, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 987, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(61, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jp_TT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jp_Table, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jp_TT.getAccessibleContext().setAccessibleName("Hoa Don");
        jp_Table.getAccessibleContext().setAccessibleName("QUẢN LÝ HÓA ĐƠN");
        jp_Table.getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTimKiemTheoMaBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTimKiemTheoMaBanActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFieldTimKiemTheoMaBanActionPerformed

    private void jButtonTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTimKiemActionPerformed
        // TODO add your handling code here:
        String maHD = jTextFieldTimKiemTheoMaBan.getText();
        if(maHD.equals("")){
            JOptionPane.showMessageDialog(
            null, // Để null nếu không có thành phần cha
            "Mã hóa đơn bị rỗng", // Thông điệp hiển thị
            "Lỗi", // Tiêu đề của hộp thoại
            JOptionPane.ERROR_MESSAGE // Kiểu thông báo lỗi
    );
}

        
    }//GEN-LAST:event_jButtonTimKiemActionPerformed

    private void btn_InActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_InActionPerformed
        // TODO add your handling code here:
          int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn in hóa đơn không?", "Xác nhận in hóa đơn", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) {
        return; // Kết thúc phương thức nếu người dùng chọn không
    }  
try {
    // Kích thước trang PDF (5 inch x 8 inch)
    float width = 8.0f;  
    float height = 10.0f;


} catch (Exception e) {
    e.printStackTrace();
}

        
    }//GEN-LAST:event_btn_InActionPerformed

    private void jComboBox_TrangThaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_TrangThaiActionPerformed
        // TODO add your handling code here:
        String selectedStatus = (String) jComboBox_TrangThai.getSelectedItem();
    
    // Gọi phương thức để lấy danh sách hóa đơn
    HoaDonDAO hoaDonDao = new HoaDonDAO();
    List<HoaDonThanhToan> dsHoaDon = hoaDonDao.getDanhSachHoaDon(); // Gọi hàm để lấy danh sách hóa đơn
    int row = JTable_DS.getSelectedRow();
    // Xóa dữ liệu cũ trong bảng
    DefaultTableModel tableModel = (DefaultTableModel) JTable_DS.getModel();
    String maHD = JTable_DS.getValueAt(row, 0) != null ? JTable_DS.getValueAt(row, 0).toString() : null;
    tableModel.setRowCount(0); // Xóa dữ liệu cũ

    // Duyệt qua danh sách hóa đơn và thêm vào bảng nếu trạng thái khớp
    for (HoaDonThanhToan hoaDon : dsHoaDon) {
        if (hoaDon.getTrangThai().equals(selectedStatus)) {
            if (maHD != null) {
        double thanhTien;
        double tongTienMonAn = 0;
            chitiet_dao = new ChiTietHoaDonDAO();
        List<ChiTietHoaDon> DSChiTietHoaDon = chitiet_dao.getDanhSachChiTietHoaDon(maHD);
        if (DSChiTietHoaDon != null && !DSChiTietHoaDon.isEmpty()) {
            //dshd.forEach(System.out::println);  // Kiểm tra dữ liệu có trong danh sách
                
                int soThuTu = 1; // Đếm số thứ tự của món trong hóa đơn
            for (ChiTietHoaDon cthd : DSChiTietHoaDon) {
                
                Object[] rowData = {
                    soThuTu,
                    cthd.getMonAn().getTenMonAn(),
                    cthd.getMonAn().getGiaTien(),
                    cthd.getSoLuong(),
                    thanhTien = (cthd.getMonAn().getGiaTien() * cthd.getSoLuong()),
                };
                soThuTu++;
                tongTienMonAn += thanhTien;
                tableModel.addRow(rowData);
            }
            jT_Tong.setText(""+tongTienMonAn);
            
//            jT_Giam.get
        } else {
            System.out.println("Danh sách chi tiết hóa đơn rỗng hoặc không lấy được dữ liệu!");
        }
        HoaDonThanhToan hdtt = hoadon_dao.timHoaDonTheoMa(maHD);
    }//GEN-LAST:event_jComboBox_TrangThaiActionPerformed
        }}}
    private void btn_ThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ThanhToanActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thanh toán không?", "Xác nhận thanh toán", JOptionPane.YES_NO_OPTION);
    if (confirm != JOptionPane.YES_OPTION) {
        return;
    }
    
    // Cập nhật cơ sở dữ liệu
    try {
        HoaDonDAO hoaDon_DAO = new HoaDonDAO();
        
        // Giả sử bạn có một phương thức để cập nhật hóa đơn trong cơ sở dữ liệu
        boolean isUpdated = hoaDon_DAO.updateInvoice(hoaDon);
        //
        hoaDon_DAO.capNhatTrangThaiHoaDon(TOOL_TIP_TEXT_KEY, TOOL_TIP_TEXT_KEY);
        if (isUpdated) {
            // Cập nhật trạng thái nút in hóa đơn sau khi thanh toán thành công
            JOptionPane.showMessageDialog(this, "Thanh toán thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            btn_In.setEnabled(true);

           String trangThaiMoi = "TRONG";
           
//            BanAnDAO.capNhatTrangThaiBan(hoaDon.getBanAn().getMaBan(), trangThaiMoi);
            
            // Cập nhật số lượng tối thiểu khuyến mãi
//            KhuyenMai khuyenMai = khachHang.getKhuyenMai();  // Lấy khuyến mãi từ khách hàng
//            if (khuyenMai != null) {
//                int soLuongToiThieu = khuyenMai.getSoLuongToiThieu(); // Lấy số lượng tối thiểu
//
//                  if (soLuongToiThieu > 0) {
//        // Trừ số lượng tối thiểu khuyến mãi
//        int soLuongMoi = soLuongToiThieu - 1;  // Giảm số lượng tối thiểu
//        khuyenMai.setSoLuongToiThieu(soLuongMoi);
//        
//        // Gọi hàm cập nhật số lượng tối thiểu khuyến mãi
//        KhuyenMai_DAO khuyenMaiDAO = new KhuyenMai_DAO();
//        khuyenMaiDAO.capNhatSoLuongToiThieu(khuyenMai.getMaKhuyenMai(), soLuongMoi);
//    }     
//            }
        
        } else {
            JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi thanh toán. Vui lòng thử lại!", "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Lỗi hệ thống: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_btn_ThanhToanActionPerformed

    private void jT_TongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jT_TongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jT_TongActionPerformed

    private void jT_TimKiemTheoMaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jT_TimKiemTheoMaHDActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jT_TimKiemTheoMaHDActionPerformed

    private void JTable_DSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTable_DSMouseClicked
        // TODO add your handling code here:
        // Lấy hàng được chọn từ JTable_DS
        int row = JTable_DS.getSelectedRow();
        hoadon_dao = new HoaDonDAO();

        // Kiểm tra xem có hàng nào được chọn không
        if (row != -1) {
        String maHD = JTable_DS.getValueAt(row, 0) != null ? JTable_DS.getValueAt(row, 0).toString() : null;
        DefaultTableModel tableModel = (DefaultTableModel) jTable_ChiTiet.getModel();
        // Xóa dữ liệu cũ trên bảng (nếu có)
        tableModel.setRowCount(0);    
        if (maHD != null) {
        double thanhTien;
        double tongTienMonAn = 0;
        chitiet_dao = new ChiTietHoaDonDAO();
        List<ChiTietHoaDon> DSChiTietHoaDon = chitiet_dao.getDanhSachChiTietHoaDon(maHD);
        DSChiTietHoaDon.forEach(System.out::println);
            if (DSChiTietHoaDon != null && !DSChiTietHoaDon.isEmpty()) {
                //dshd.forEach(System.out::println);  // Kiểm tra dữ liệu có trong danh sách

                    int soThuTu = 1; // Đếm số thứ tự của món trong hóa đơn
                for (ChiTietHoaDon cthd : DSChiTietHoaDon) {

                    Object[] rowData = {
                        soThuTu,
                        cthd.getMonAn().getTenMonAn(),
                        cthd.getMonAn().getGiaTien(),
                        cthd.getSoLuong(),
                        thanhTien = (cthd.getMonAn().getGiaTien() * cthd.getSoLuong()),
                    };
                    soThuTu++;
                    tongTienMonAn += thanhTien;
                    tableModel.addRow(rowData);
                }
                jT_Tong.setText(""+tongTienMonAn);

    //            jT_Giam.get
            } else {
                System.out.println("Danh sách chi tiết hóa đơn rỗng hoặc không lấy được dữ liệu!");
            }
        HoaDonThanhToan hdtt = hoadon_dao.timHoaDonTheoMa(maHD);
        
        // Kiểm tra hdtt và KhachHang không phải null
        if (hdtt != null && hdtt.getKhachHang() != null) {
            KhachHang kh = hdtt.getKhachHang();

            // Cập nhật các trường thông tin khách hàng
            jText_MaKH.setText(kh.getMaKhachHang() != null ? kh.getMaKhachHang() : "");
            jText_TenKH.setText(kh.getTenKhachHang() != null ? kh.getTenKhachHang() : "");
            jText_SoDienThoai.setText(kh.getMaKhachHang() != null ? kh.getSoDienThoai(): "");
            jText_Mail.setText(kh.getTenKhachHang() != null ? kh.getEmail(): "");
        } else {
            System.out.println("Không tìm thấy hóa đơn hoặc khách hàng!");
            jText_MaKH.setText("");
            jText_TenKH.setText("");
            jText_SoDienThoai.setText("");
            jText_Mail.setText("");
            
        }
        
    } else {
        System.out.println("Không có mã hóa đơn trong hàng được chọn.");
    }
}

    }//GEN-LAST:event_JTable_DSMouseClicked

    private void jText_SoDienThoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jText_SoDienThoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jText_SoDienThoaiActionPerformed

    private void jButtonTimKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTimKiemMouseClicked
        // TODO add your handling code here:
        String maBan = jTextFieldTimKiemTheoMaBan.getText();
        String soDT =jT_TimTheoSoDienThoai.getText();
        String maHD =jT_TimKiemTheoMaHD.getText();
        System.out.println("MaBan: "+maHD);
    if(maHD.equals("")||maHD.equals("Nhập mã hóa đơn") || maHD==null 
            || soDT.equals("")||soDT.equals("Nhập số điện thoại") || soDT==null
            || maBan.equals("")||maBan.equals("Nhập mã bàn") || maBan==null){
    JOptionPane.showMessageDialog(
        null, // Để null nếu không có thành phần cha
        "Mã hóa đơn bị rỗng", // Thông điệp hiển thị
        "Lỗi", // Tiêu đề của hộp thoại
        JOptionPane.ERROR_MESSAGE // Kiểu thông báo lỗi
    );
    
}
    else{
        
    }
    }//GEN-LAST:event_jButtonTimKiemMouseClicked

    private void jT_GiamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jT_GiamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jT_GiamActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable_DS;
    private javax.swing.JScrollPane Jscroll_table;
    private javax.swing.JButton btn_In;
    private javax.swing.JButton btn_ThanhToan;
    private javax.swing.JButton jButtonTimKiem;
    private javax.swing.JComboBox<String> jComboBox_TrangThai;
    private javax.swing.JLabel jL_Giam;
    private javax.swing.JLabel jL_MaBan;
    private javax.swing.JLabel jL_ThanhToan;
    private javax.swing.JLabel jL_Thue;
    private javax.swing.JLabel jL_TimTheoMa;
    private javax.swing.JLabel jL_TimTheoSoDienThoai;
    private javax.swing.JLabel jL_Tong;
    private javax.swing.JLabel jL_TrangThai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelTimHoaDon;
    private javax.swing.JPanel jPanelKH;
    private javax.swing.JPanel jPanel_Button;
    private javax.swing.JPanel jPanel_DS;
    private javax.swing.JPanel jPanel_Infor;
    private javax.swing.JScrollPane jScrollPaneChiTietHoaDon;
    private javax.swing.JTextField jT_Giam;
    private javax.swing.JTextField jT_ThanhToan;
    private javax.swing.JTextField jT_Thue;
    private javax.swing.JTextField jT_TimKiemTheoMaHD;
    private javax.swing.JTextField jT_TimTheoSoDienThoai;
    private javax.swing.JTextField jT_Tong;
    private javax.swing.JTable jTable_ChiTiet;
    private javax.swing.JTextField jTextFieldTimKiemTheoMaBan;
    private javax.swing.JTextField jText_MaKH;
    private javax.swing.JTextField jText_Mail;
    private javax.swing.JTextField jText_SoDienThoai;
    private javax.swing.JTextField jText_TenKH;
    private javax.swing.JPanel jp_TT;
    private javax.swing.JPanel jp_Table;
    // End of variables declaration//GEN-END:variables
}
